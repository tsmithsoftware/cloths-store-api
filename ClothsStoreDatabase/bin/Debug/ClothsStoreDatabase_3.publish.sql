/*
Deployment script for ClothsStore

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ClothsStore"
:setvar DefaultFilePrefix "ClothsStore"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[CartItem]...';


GO
CREATE TABLE [dbo].[CartItem] (
    [id]        INT NOT NULL,
    [productId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [id]       INT           IDENTITY (1, 1) NOT NULL,
    [name]     VARCHAR (255) NULL,
    [category] VARCHAR (255) NULL,
    [price]    VARCHAR (255) NULL,
    [oldPrice] VARCHAR (255) NULL,
    [stock]    INT           NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Product_CartItem]...';


GO
ALTER TABLE [dbo].[CartItem] WITH NOCHECK
    ADD CONSTRAINT [FK_Product_CartItem] FOREIGN KEY ([productId]) REFERENCES [dbo].[Product] ([id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF (EXISTS(SELECT * FROM [dbo].CartItem))  
BEGIN  
    DELETE FROM [dbo].CartItem  
END  

IF (EXISTS(SELECT * FROM [dbo].Product))
BEGIN
    DELETE FROM [dbo].Product
END

BEGIN
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Shoes', 'Clothing', '£25', '£30', 15)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Shirt', 'Clothing', '£25', '£30', 40)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Jacket', 'Clothing', '£25', '£30', 30)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Trousers', 'Clothing', '£25', '£30', 12)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Laptop', 'Electronics', '£25', '£30', 10)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Phone', 'Electronics', '£25', '£30', 23)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Carpet', 'Furnishings', '£25', '£30', 13)
INSERT INTO [dbo].Product(name,category,price, oldPrice, stock) VALUES ('Chair', 'Furnishings', '£25', '£30', 5)
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[CartItem] WITH CHECK CHECK CONSTRAINT [FK_Product_CartItem];


GO
PRINT N'Update complete.';


GO
